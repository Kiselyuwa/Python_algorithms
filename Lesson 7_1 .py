#  1). Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
#  на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# ● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# ● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.


import random

size = 10
arr = [random.randrange(-100, 100) for _ in range(size)]  # .randint подошел бы, если можно было бы включать правую границу
print(f'Исходный массив {arr}')


def bubble_sort(array):
    n = j = 1
    while n < len(array):
        a = True
        for i in range(len(array) - j):  # - j чтобы не доходить до элемента, который уже встал на свое место
            if array[i] < array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                a = False
        j += 1
        n += 1
        if a:  # если за проход не было переставлено ни одного элемента, значит массив уже отсортирован.
            break
        # print(array)
    return array


print(f'Отсортированный массив {bubble_sort(arr)}')
